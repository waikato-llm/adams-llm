# Project: adams
# Date: 2024-08-01 14:12:01
# User: fracpete
# Charset: UTF-8
# Modules: adams-annotator,adams-audio,adams-compress,adams-core,adams-docker,adams-event,adams-excel,adams-ffmpeg,adams-groovy,adams-imaging,adams-imaging-boofcv,adams-imaging-ext,adams-json,adams-math,adams-meta,adams-ml,adams-net,adams-odf,adams-opencv,adams-pdf,adams-pyro4,adams-python,adams-random,adams-rats-core,adams-redis,adams-spreadsheet,adams-terminal,adams-video,adams-visualstats,adams-weka,adams-xml,adams-yaml
#
adams.flow.control.Flow -annotation "Turns JSON files generated with \\\"kb_eval\\\" script into CSV file,\\nextracting the question and answer.\\nExample docker image:\\nhttps://github.com/waikato-llm/huggingface_transformers/tree/main/4.43.1_cuda12.1_langchain" -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.SpreadSheetDisplay -display-type adams.flow.core.displaytype.Default -width 1200 -height 800 -cell-rendering-customizer adams.gui.core.spreadsheettable.DefaultCellRenderingCustomizer -allow-search true -writer adams.data.io.output.NullWriter -preview adams.gui.core.spreadsheetpreview.NullPreview
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}.props -value-type FILE_FORWARD_SLASHES -expand-value true
  adams.flow.source.EnterManyValues -name Parameters -stop-if-canceled true -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name input_dir -display \"Input dir\" -help \"the dir with the JSON files to process\" -file-chooser-title \"Input dir\" -use-forward-slashes true -use-absolute-path true" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name run_no -display \"Run no\" -help \"the run number to extract, eg 1 or 3; leave empty for all\"" -value "adams.flow.source.valuedefinition.FileValueDefinition -name output_file -display \"Output file\" -help \"the spreadsheet to save the data in\" -file-chooser-title \"Output file\" -extension csv -use-forward-slashes true -use-absolute-path true" -output-type MAP -restoration-enabled true -restoration-file @{restore}
  adams.flow.transformer.MapToVariables
  adams.flow.transformer.SetVariable -name regexp_run -var-name regexp_run -var-value .*run=@{run_no}.json -expand-value true
 adams.flow.control.Trigger -name "init sheet"
  adams.flow.source.NewSpreadSheet -columns file,run,index,question,answer,has_answer,has_mƒÅori_answer,language_quality,answer_quality -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet
  adams.flow.transformer.SetStorageValue -storage-name sheet
 adams.flow.control.Trigger -name process
  adams.flow.source.FileSystemSearch -output-array true -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{input_dir} -regexp .*\\\\.json -sorting SORT_BY_NAME" -use-forward-slashes true
  adams.flow.control.ConditionalSubProcess -name "specific run?" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{run_no}\\\\\\\" != \\\\\\\"\\\\\\\"\""
   adams.flow.transformer.StringMatcher -regexp @{regexp_run}
  adams.flow.transformer.ArrayToSequence -name "ArrayToSequence (2)"
  adams.flow.control.Tee -name file/run
   adams.flow.transformer.BaseName -remove-extensions true
   adams.flow.transformer.SetVariable -var-name file
   adams.flow.transformer.StringReplace -find .*-run=
   adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name run
  adams.flow.transformer.JsonFileReader -type OBJECT
  adams.flow.transformer.GetJsonValue -path qna -data-type ARRAY
  adams.flow.transformer.Convert -conversion adams.data.conversion.JsonArrayToArray
  adams.flow.transformer.ArrayToSequence
  adams.flow.control.Tee -name "extract data"
   adams.flow.control.Tee -name index
    adams.flow.transformer.GetMapValue -key index
    adams.flow.transformer.SetVariable -var-name index
   adams.flow.control.Tee -name question
    adams.flow.transformer.GetMapValue -key question
    adams.flow.transformer.SetVariable -var-name question
   adams.flow.control.Tee -name answer
    adams.flow.transformer.GetMapValue -key answer
    adams.flow.transformer.GetMapValue -name "GetMapValue (2)" -key clean
    adams.flow.transformer.SetVariable -var-name answer
  adams.flow.control.Trigger -name "add row"
   adams.flow.source.StorageValue -storage-name sheet -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.transformer.SpreadSheetInsertRow -after true
   adams.flow.transformer.SpreadSheetSetCell -name file -no-copy true -row last -col file -finder adams.data.spreadsheet.cellfinder.CellRange -value @{file}
   adams.flow.transformer.SpreadSheetSetCell -name run -no-copy true -row last -col run -finder adams.data.spreadsheet.cellfinder.CellRange -value @{run}
   adams.flow.transformer.SpreadSheetSetCell -name index -no-copy true -row last -col index -finder adams.data.spreadsheet.cellfinder.CellRange -value @{index}
   adams.flow.transformer.SpreadSheetSetCell -name question -no-copy true -row last -col question -finder adams.data.spreadsheet.cellfinder.CellRange -value @{question}
   adams.flow.transformer.SpreadSheetSetCell -name answer -no-copy true -row last -col answer -finder adams.data.spreadsheet.cellfinder.CellRange -value @{answer}
   adams.flow.transformer.SetStorageValue -storage-name sheet
 adams.flow.control.Trigger -name output/display
  adams.flow.source.StorageValue -storage-name sheet -conversion adams.data.conversion.UnknownToUnknown
  adams.flow.control.Tee -name display
   adams.flow.sink.CallableSink -callable SpreadSheetDisplay
  adams.flow.sink.SpreadSheetFileWriter -output @{output_file} -writer adams.data.io.output.CsvSpreadSheetWriter